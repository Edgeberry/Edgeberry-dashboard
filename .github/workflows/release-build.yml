name: Build and Package
on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install --include=dev

      - name: Build project
        env:
          CI: ""
        run: npm run build

      - name: Gather required files in a temporary directory
        run: mkdir tempdir; mv ./package.json ./tempdir/; mv ./build ./tempdir/

      - name: Download latest UI release asset
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: gh release download --repo SpuQ/Edgeberry-dashboard-UI --pattern "Edgeberry-dashboard-UI.tar.gz"

      - name: Unpack the UI in the public folder
        run: mkdir ./tempdir/build/public; tar -xzf Edgeberry-dashboard-UI.tar.gz -C ./tempdir/build/public

      - name: Generate deployment package (zip it!)
        run: cd tempdir; zip -r ../deploy.zip ./*; cd ..

      - name: Upload packaged project build to release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN:  ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: deploy.zip
          asset_name: deploy.zip
          asset_content_type: application/gzip
    
      - name: Deploy to Elastic Beanstalk (AWS)
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: EdgeBerry-io
          environment_name: Edgeberry-io-env-2
          version_label: ${{ github.event.release.tag_name }}
          region: eu-north-1
          deployment_package: deploy.zip